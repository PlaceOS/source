version: "3.7"

volumes:
  influx-data:

# YAML Anchors
x-deployment-env:
  &deployment-env
  ENV: ${ENV:-development}
  SG_ENV: ${SG_ENV:-development}

x-influxdb-api-key: &influxdb-api-key .env.influxdb

x-influxdb-client-env:
  &influxdb-client-env
  INFLUX_BUCKET: ${INFLUX_BUCKET:-place}
  INFLUX_HOST: ${INFLUX_HOST:-http://influxdb:8086}
  INFLUX_ORG: ${INFLUX_ORG:-PlaceOS}

x-mqtt-client-env:
  &mqtt-client-env
  MQTT_HOST: ${MQTT_HOST:-mqtt}
  MQTT_PORT: ${MQTT_PORT:-1883}

x-redis-client-env:
  &redis-client-env
  REDIS_URL: ${REDIS_URL:-redis://redis:6379}

x-postgresdb-client-env:
  &postgresdb-client-env
  PG_HOST: ${PG_HOST:-postgres}
  PG_PORT: ${PG_PORT:-5432}
  PG_DB: ${PG_DB:-place_development}
  PG_USER: ${PG_USER:-postgres}
  PG_PASSWORD: ${PG_PASSWORD:-password}

services:
  test:
    image: placeos/service-spec-runner:${CRYSTAL_VERSION:-latest}
    volumes:
      - ${PWD}/coverage:/app/coverage
      - ${PWD}/shard.lock:/app/shard.lock
      - ${PWD}/shard.yml:/app/shard.yml.input
      - ${PWD}/lib:/app/lib
      - ${PWD}/spec:/app/spec
      - ${PWD}/src:/app/src
    depends_on:
      - mqtt
      - redis
      - migrator
      - postgres
      - influxdb
    security_opt:
      - seccomp:unconfined
    env_file:
      - *influxdb-api-key
    environment:
      # Environment
      GITHUB_ACTION: ${GITHUB_ACTION:-}
      # Service Hosts
      <<:
        [
          *influxdb-client-env,
          *mqtt-client-env,
          *redis-client-env,
          *postgresdb-client-env,
          *deployment-env
        ]

  influxdb:
    image: influxdb:${INFLUXDB_IMAGE_TAG:-2.0-alpine}
    restart: always
    hostname: influx
    healthcheck:
      test: influx bucket list
    volumes:
      - type: volume
        source: influx-data
        target: /root/.influxdbv2
    command: "--reporting-disabled"

  mqtt:
    image: iegomez/mosquitto-go-auth:${MOSQUITTO_IMAGE_TAG:-latest}
    hostname: mqtt
    restart: always
    volumes:
      - ${PWD}/config/mosquitto.conf:/etc/mosquitto/mosquitto.conf

  redis:
    image: eqalpha/keydb
    restart: always
    hostname: redis

  postgres:
    hostname: postgres
    image: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 30s
      retries: 3
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: place_development
    ports:
      - 5432:5432
  migrator:
    build:
      context: ${PWD}/spec/migration
    container_name: migrator
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      GITHUB_ACTION: ${GITHUB_ACTION:-}
      PG_DATABASE_URL: ${PG_DATABASE_URL:-postgresql://postgres:password@postgres:5432/place_development}
